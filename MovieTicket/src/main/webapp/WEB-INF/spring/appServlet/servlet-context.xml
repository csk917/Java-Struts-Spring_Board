<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 자동 bean 등록 -->
	<context:component-scan base-package="com.hotsix" />
	
	<annotation-driven />
	
	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <beans:bean id="loggerInterceptor" class="com.hotsix.common.LoggerInterceptor"></beans:bean>
        </mvc:interceptor>
        <mvc:interceptor>
        	<mvc:mapping path="/admin/**"/>
        	<beans:bean id="loginInterceptor" class="com.hotsix.common.LoginInterceptor"></beans:bean>
        </mvc:interceptor>
    </mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 에러메시지 messageSource -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>messages.boardMessage_ko</beans:value>
				<beans:value>messages.adminMessage_ko</beans:value>
				<beans:value>messages.memberMessage_ko</beans:value>
				<beans:value>messages.movieMessage_ko</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- ViewResolver 의 구현체로 특별한 맵핑 정보 없이  view 이름을 URL로 사용. View 이름과 실제 view 자원과의 이름이 같을 때 사용할 수 있다. -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<beans:property name="order" value="1" /> 
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- tiles 설정 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
	</beans:bean>
	
	<!-- 파일업로드 multipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
        <beans:property name="maxInMemorySize" value="100000000" />
	</beans:bean>
	
</beans:beans>
